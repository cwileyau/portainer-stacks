# Compose file for the *arr stack. Configuration files are stored 
# in a docker folder mounted in root. Change to bind mounts if needed.
# All containers are ran with user and group ids of the main user and 
# share to aviod permissions issues of downloaded files, please refer
# the read me file for more information.

networks:
  servarrnetwork:
    ipam:
      config:
        - subnet: 172.18.0.0/24

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun # If running proxmox see readme for more info.
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.2
    #ports:
      #- 8080:8080 # qbittorrent web interface
      #- 2881:2881 # qbittorrent torrent port
      #- 6789:6789 # nzbget
      #- 9696:9696 # prowlarr
    volumes:
      - /docker/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=airvpn
      - VPN_TYPE=wireguard
      #- FIREWALL_VPN_INPUT_PORTS=2881
    # - FIREWALL_OUTBOUND_SUBNETS=192.168.0.0/24 # add if prowlarr wont connect to other arr apps, change to your specific subnet
      - WIREGUARD_PRIVATE_KEY=SNgdMAIs7LH/eFGQuSB2bqy7ypGDPrKYpu5lb2tbSlw=
      - WIREGUARD_PRESHARED_KEY=Ryhml1N00TB3xtQtXRkqWCJcbn1fSINa5fbgEPWBa1o=
      - WIREGUARD_ADDRESSES=10.177.161.222
      - SERVER_COUNTRIES=new zealand
      - SERVER_CITIES=auckland
      - HEALTH_VPN_DURATION_INITIAL=120s
    healthcheck:
      test: ping -c 1 1.1.1.1 || exit 1
      interval: 60s
      timeout: 20s
      retries: 5
    restart: unless-stopped

# This is a new addition since creating the tutorial video on this stack. 
# See the 'qBittorrent Stalls with VPN Timeout' section for more information.
  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    network_mode: "none"
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=Australia/Brisbane
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# Healthcheck was added to work with deunhealth to restart container
# on unhealthy status. labels allows deunhealth to monitor.
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    labels:
      - deunhealth.restart.on.unhealthy=true
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
      - WEBUI_PORT=8080
      - TORRENTING_PORT=2881
    volumes:
      - /docker/qbittorrent:/config
      - /home/craig/data:/data
    #depends_on:
      #- gluetun
    #network_mode: service:gluetun
    healthcheck:
        test: ping -c 1 1.1.1.1 || exit 1
        interval: 60s
        retries: 3
        start_period: 20s
        timeout: 10s
    ports:
      - 2881:2881
      - 8080:8080
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.9

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
      - NZBGET_USER=admin
      - NZBGET_PASS=12georgia
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/nzbget:/config
      - /home/craig/data:/data
    #depends_on:
      #- gluetun
    restart: unless-stopped
    #network_mode: service:gluetun
    ports:
      - 6789:6789
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.10
    
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/prowlarr:/config
    restart: unless-stopped
    #depends_on:
      #- gluetun
    #network_mode: service:gluetun
    ports:
      - 9696:9696
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.11

  medusa:
    image: pymedusa/medusa
    container_name: medusa
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
    volumes:
      - /docker/medusa:/config
      - /home/craig/data/downloads/medusa:/downloads
      - /home/craig/data/tv:/tv
    ports:
      - 8081:8081
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.12

    restart: unless-stopped
    
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/sonarr:/config
      - /home/craig/data:/data
    ports:
      - 8989:8989
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.3

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/radarr:/config
      - /home/craig/data:/data
    ports:
      - 7878:7878
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.4

  lidarr:
    container_name: lidarr
    image: lscr.io/linuxserver/lidarr:latest
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/lidarr:/config
      - /home/craig/data:/data
    environment:
     - PUID=1000
     - PGID=1000
     - TZ=Australia/Brisbane
    ports:
      - 8686:8686
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.5

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /docker/bazarr:/config
      - /home/craig/data:/data
    ports:
      - 6767:6767
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.6

# Newer additions to this stack feel free to remove if unwanted.

# Used to browse the file system via a web browser.
# Default login is admin/admin. Change password in Settings > User Managment.
# Permissions set to my dault user 1000:1000 as that's the user that owns my data directory.

  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    volumes:
      - /data:/srv # Directory you want exposed to filebrowser.
      - /docker/filebrowser/data:/data
      - /docker/filebrowser/config:/config
    environment:
      - PUID=1000
      - PGID=1000
    ports:
      - 80:80
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.7
    restart: unless-stopped

# Youtube downloading and subscription service. Information not yet added to readme.md
  ytdl-sub:
    image: ghcr.io/jmbannon/ytdl-sub:latest
    container_name: ytdl-sub
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Australia/Brisbane
      - DOCKER_MODS=linuxserver/mods:universal-cron
    volumes:
      - /docker/ytdl-sub/config:/config
      - /home/craig/data:/youtube
    networks:
      servarrnetwork:
        ipv4_address: 172.18.0.8
    restart: unless-stopped
